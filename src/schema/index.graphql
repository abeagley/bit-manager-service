# import Bit, BitOrderByInput, BitWhereInput, BitWhereUniqueInput from '../generated/prisma/datamodel.graphql'
# import BitScopeOrderByInput, BitScopeWhereInput, BitScopeWhereUniqueInput from '../generated/prisma/datamodel.graphql'
# import UserOrderByInput, UserRole, UserWhereInput, UserWhereUniqueInput from '../generated/prisma/datamodel.graphql'
# import SettingCreateInput from '../generated/prisma/datamodel.graphql'

# import InstallCreateInput, SanityCheck from './install.graphql'
# import ApiUser, ApiUserCreateInput, ApiUserLoginInput, ApiUserLogin from './user.graphql'
# import BitScope, BitScopeCreateInput from './bit-scope.graphql'
# import Setting from './settings.graphql'
# import BitExportHook, BitExportHookCreateInput from './hooks.graphql'

type Query {
  bit (where: BitWhereUniqueInput!): Bit
  bits (where: BitWhereInput, orderBy: BitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bit]
  bitScope (where: BitScopeWhereUniqueInput!): BitScope
  bitScopes (where: BitScopeWhereInput, orderBy: BitScopeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BitScope]
  sanityCheck: SanityCheck
  settings: Setting
  user (where: UserWhereUniqueInput!): ApiUser
  users (where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ApiUser]
}

type Mutation {
  createBitScope (data: BitScopeCreateInput!): BitScope
  createSettings (data: SettingCreateInput!): Setting
  createUser (data: ApiUserCreateInput!): ApiUser
  hookBitExportPre(data: BitExportHookCreateInput!): BitExportHook
  hookBitExportPost(data: BitExportHookCreateInput!): BitExportHook
  install (data: InstallCreateInput!): Setting
  login (data: ApiUserLoginInput!): ApiUserLogin!
}
