type Bit {
  bindingPrefix: String
  box: String
  createdAt: DateTime!
  compiler: String
  dependencies: Json
  deprecated: Boolean @default(value: false)
  devDependencies: Json
  devPackageDependencies: Json
  dists: Json
  docs: Json
  envsPackageDependencies: Json
  files: Json
  hasStorybook: Boolean @default(value: false)
  id: ID! @unique
  lang: String
  license: String
  log: Json
  mainFile: String
  name: String
  packageDependencies: Json
  peerPackageDependencies: Json
  scope: BitScope! @relation(name: "BitScopeBits")
  specsResults: Json
  tester: String
  updatedAt: DateTime!
  version: String
}

type BitScope {
  bits: [Bit!]! @relation(name: "BitScopeBits")
  createdAt: DateTime!
  description: String!
  id: ID! @unique
  isLocal: Boolean! @default(value: true)
  name: String! @unique
  pathName: String! @unique
  updatedAt: DateTime!
  url: String @unique
}

type Setting {
  createdAt: DateTime!
  companyName: String! @unique
  currentServerUser: String! @unique
  id: ID! @unique
  installed: Boolean! @default(value: false)
  updatedAt: DateTime!
}

enum UserRole {
  ADMIN,
  USER
}

type User {
  createdAt: DateTime!
  credentials: String
  email: String! @unique
  id: ID! @unique
  name: String!
  password: String!
  role: UserRole! @default(value: USER)
  updatedAt: DateTime!
}
